apiVersion: apps/v1
kind: Deployment
metadata:
  name: financeservice-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: financeservice
  template:
    metadata:
      labels:
        app: financeservice
    spec:
      containers:
      - name: peer2peerworkcontract
        # Replace [GCLOUD_PROJECT] with your project ID.
        image: gcr.io/mlpractise/peer2peerworkcontract-financeservice:v1

        # This setting makes nodes pull the docker image every time before
        # starting the pod. This is useful when debugging, but should be turned
        # off in production.
        imagePullPolicy: Always
        resources:
          requests:
            memory: "300Mi"
          limits:
            memory: "1000Mi"
        # The traderepository process listens on port 8080 for web traffic by default.
        ports:
        - name: financehttp
          containerPort: 8888
        env:
        - name: PORT
          value: "8888"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: peer2peerfrontend-deployment

# The traderepository frontend replica set ensures that at least 3
# instances of the traderepository app are running on the cluster.
# For more info about Pods see:
#   https://cloud.google.com/container-engine/docs/pods/
spec:
  replicas: 1
  selector:
    matchLabels:
      app: peer2peerfrontend
  template:
    metadata:
      labels:
        app: peer2peerfrontend
    spec:
      containers:
      - name: peer2peerworkcontract
        # Replace [GCLOUD_PROJECT] with your project ID.
        image: gcr.io/mlpractise/peer2peerworkcontract-peer2peerfrontend:v1

        # This setting makes nodes pull the docker image every time before
        # starting the pod. This is useful when debugging, but should be turned
        # off in production.
        imagePullPolicy: Always
        resources:
          requests:
            memory: "300Mi"
          limits:
            memory: "1000Mi"
        # The traderepository process listens on port 8080 for web traffic by default.
        ports:
        - name: frontendhttp
          containerPort: 8080
        env:
        - name: PORT
          value: "8080"
        - name: RUN_ENV
          value: "UAT"
